{"version":3,"sources":["core/api/home.js","core/api/rating.js","core/api/Api.js","panels/Home.js","panels/Begin.js","panels/Level.js","panels/Rating.js","App.js","redux/reducers/index.js","redux/reducers/level.js","redux/index.js","index.js"],"names":["api","home","begin","body","handler","post","method","level","uid","request","confirm","lat","long","region","list","world","config","window","location","host","params","tag","options","fetch","abort","Object","keys","map","k","encodeURIComponent","join","then","response","ok","json","text","console","error","url","substr","catch","assign","JSON","stringify","rating","forEach","a","Home","props","state","id","this","size","React","Component","connect","ownProps","Begin","className","onClick","start","Level","bridge","send","data","Api","fetchedUser","setState","check","status","before","photo_200","src","description","city","title","first_name","last_name","value","checks","confirmed","mode","key","check_id","sended","statusOfCheck","osName","platform","Rating","select","isLoading","this_","token","access_token","fds","friends","items","fetchData","left","navigate","IOS","expandable","friend","photo_200_orig","Math","round","random","dispatch","App","activeModal","activePanel","user","e","currentTarget","dataset","to","setUser","setLevel","modalClose","group_id","available","result","setActiveModal","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","attributes","setNamedItem","modal","onClose","modalBack","icon","header","caption","actions","action","appReducer","combineReducers","rootReducer","persistConfig","storage","persistedReducer","persistReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.c4e8659d.chunk.js","sourcesContent":["/**\n *\n */\n\nconst api = {home: {\n  /**\n   * Список регионов России или стран\n   * @param {Object} body данные пользователя с координатами дома\n   * @param {Function} handler обработчик ответа в случае успеха\n   */\n  begin: (body, handler) => {\n    return api.post({method: 'home/begin', body: body, handler: handler});\n  },\n\n  /**\n   * Получает уровень\n   * @param {Integer} uid ид. пользователя\n   * @param {Function} handler обработчик ответа в случае успеха\n   */\n  level: (uid, handler) => {\n    return api.request({method: 'home/level?uid='+uid, handler: handler});\n  },\n\n  /**\n   * Подтвердить нахождение дома\n   * @param {Integer} uid ид. пользователя\n   * @param {Float} lat\n   * @param {Float} long\n   * @param {Function} handler обработчик ответа в случае успеха\n   */\n  confirm: (uid, lat, long, handler) => {\n    return api.request({method: 'home/confirm?uid='+uid+'&lat='+lat+'&long='+long, handler: handler});\n  },\n}};\n\nexport default api;\n","/**\n * Методы для работы с регионами\n */\n\nconst api = {region: {\n  /**\n   * Список регионов России или стран\n   * @param {Integer} world 0 - регионы России, 1 - страны\n   * @param {Function} handler обработчик ответа в случае успеха\n   */\n  list: (world, handler) => {\n    return api.request({method: 'region/index?world='+world, handler: handler});\n  }\n}};\n\nexport default api;\n","/**\n * Работа с сервером\n */\nimport home from './home';\nimport rating from './rating';\n\nconst config = {\n  domain: window.location.host == 'orlove.github.io' ? 'https://rest-news.hozya.ru' : 'https://api.newsapp.me'\n};\n\nvar api = {\n  /**\n   * Запрос данных с сервера\n   * @param  {String}   method  api-метод\n   * @param  {Object}   params  параметры api-метода\n   * @param  {mix}      tag     ключ запроса (для возможности его отмены)\n   * @param  {Function} handler обработчик ответа в случае успеха\n   * @param  {Object}   options доп. опции http-запроса (заголовки, метод и т.д.)\n   */\n  request: function ({method, params, tag, handler, options}) {\n\n    // Отменяем предыдущий ещё не завершенный запрос\n    if(tag) {\n      fetch.abort(tag);\n    }\n\n    // Преобразуем в url\n    if(params) {\n      params = Object.keys(params).map((k) =>\n          encodeURIComponent(k) + '=' + encodeURIComponent(params[k])\n      ).join('&');\n      params = '?'+params;\n    } else {\n      params = '';\n    }\n\n    return fetch(config.domain+'/'+method+params, options, tag)\n      .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          response.text().then((text) => {\n            console.error(response.url, text.substr(-64), response);\n          });\n          return false;\n        }\n      })\n      .then(handler)\n      .catch((error) => {\n        console.error(error);\n        //this.setState({error: error, isLoading: false});\n      });\n  },\n  /**\n   * POST-запросы\n   * @param  {String}   method  api-метод\n   * @param  {Object}   body    тело запроса\n   * @param  {mix}      tag     ключ запроса (для возможности его отмены)\n   * @param  {Function} handler обработчик ответа в случае успеха\n   * @param  {Object}   options доп. опции http-запроса (заголовки, метод и т.д.)\n   */\n  post: function ({method, body, tag, handler, options}) {\n\n    // Отменяем предыдущий ещё не завершенный запрос\n    if(tag) {\n      fetch.abort(tag);\n    }\n\n    options = Object.assign({\n      method: 'POST',\n      /*headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },*/\n      body: JSON.stringify(body)\n    }, options || {});\n\n    return fetch(config.domain+'/'+method, options, tag)\n      .then((response) => {\n        if(response.ok) {\n          return response.json();\n        } else {\n          response.text().then((text) => {\n            console.error(response.url, text.substr(-64), response);\n          });\n          return false;\n        }\n      })\n      .then(handler)\n      .catch((error) => {\n        console.error(error);\n        //this.setState({error: error, isLoading: false});\n      });\n  },\n  /**\n   * Отменяет запрос с ключем tag\n   * @param {mix} tag ключ запроса\n   */\n  abort: (tag) => {\n    fetch.abort(tag);\n  },\n  /**\n   * Список городов\n   * @param  {Function} handler обработчик ответа в случае успеха\n   */\n  /*cities: (handler) => {\n    return api.request({method: 'cities', handler: (response) => {\n      if(response.items) {\n        handler(response.items);\n      }\n    }});\n  }*/\n};\n\n// Сливаем каждый компонент с api\n[home, rating].forEach((a) => {\n  api = Object.assign(a, api);\n});\n\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, Button, Group, Cell, Div, ScreenSpinner } from '@vkontakte/vkui';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport Api from '../core/api/Api';\n\n// Redux\nimport { connect } from 'react-redux';\n//import { openRegionsList } from '../redux/actions/region';__\n\nclass Home extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<ScreenSpinner size='large' />\n\t\t\t</Panel>\n\t\t);\n}}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\t//world: state.world\n\t};\n};\n\n/*const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonOpenRegionsList: (world) =>\n\t\t\tnew Promise((resolve) =>\n\t\t\t\topenRegionsList(world).then((action) => {\n\t\t\t\t\tdispatch(action);\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t)\n\t};\n};*/\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(Home);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, Button, Group, Cell, Div, View } from '@vkontakte/vkui';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport Api from '../core/api/Api';\n\n// Redux\nimport { connect } from 'react-redux';\n//import { openRegionsList } from '../redux/actions/region';\n//\nimport './Begin.css';\n\nclass Begin extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\t// Открыть список областей или стран\n  /*openRegionsList = (world) => {\n    this.props.onOpenRegionsList(world).then(() => this.props.navigate('regions-list'));\n  };*/\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<PanelHeader>Победим коронавирус вместе!</PanelHeader>\n\t\t\t\t<Group>\n\t\t\t\t\t<Div className=\"Explanation\">\n\t\t\t\t\t\tСейчас очень важно находится <b>дома</b>. Данное приложение начисляет балы за проведенное время дома. Демонстрируйте ответственное поведение личным примером!\n\t\t\t\t\t\tПосле принятия участия, наша группа будет отправлять вам уведомления. При получении такого сообщения, вам нужно перейти в приложение и подтвердить то, что вы находитесь дома (у приложения нет постоянного доступа к вашему местоположению, поэтому приходится подтверждать вручную).\n\t\t\t\t\t</Div>\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={() => {this.props.start()}}>Сейчас я дома, начать!</Button>\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n}}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\t//world: state.world\n\t};\n};\n\n/*const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonOpenRegionsList: (world) =>\n\t\t\tnew Promise((resolve) =>\n\t\t\t\topenRegionsList(world).then((action) => {\n\t\t\t\t\tdispatch(action);\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t)\n\t};\n};*/\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(Begin);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, Button, List, Group, Cell, Div, Avatar, Header } from '@vkontakte/vkui';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport Api from '../core/api/Api';\n\n// Redux\nimport { connect } from 'react-redux';\n//import { updateLevel } from '../redux/actions/level';\n\n\nimport './Level.css';\n\n\nclass Level extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {\n\t\t\tlevel: props.level\n\t\t};\n  }\n\n\t/** Подтвердить находение дома */\n\tconfirm() {\n\t\tbridge.send(\"VKWebAppGetGeodata\", {})\n\t\t\t.then((data) => {\n\t\t\t\tApi.home.confirm(this.props.fetchedUser.id, data.lat, data.long, (level) => {\n\t\t\t\t\tthis.setState({level: level});\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tstatusOfCheck(check) {\n\t\tswitch(check.status) {\n\t\t\tcase 1: return 'Подтверждено';\n\t\t\tcase 2: return 'Нарушение';\n\t\t\tcase 4: return 'Поздно';\n\t\t\tcase 8: return 'Опоздал';\n\t\t\tdefault: return 'Ожидает подтверждения';\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<PanelHeader>Рейтинг</PanelHeader>\n\t\t\t\t{this.props.fetchedUser && <Group>\n\t\t\t\t\t<List className=\"RatingList\">\n\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t<Div></Div>\n\t\t\t\t\t\t\t<Div>Уровень</Div>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tbefore={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\n\t\t\t\t\t\t\tdescription={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Div>{`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}</Div>\n\t\t\t\t\t\t\t<Div>{this.state.level ? this.state.level.value : '-'}</Div>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t</List>\n\t\t\t\t</Group>}\n\n\t\t\t\t{this.state.level && this.state.level.checks && <Group>\n\t\t\t\t\t{!this.state.level.checks[0].confirmed && <Div><Button size=\"xl\" mode=\"commerce\" onClick={()=>{this.confirm()}}>Я дома</Button></Div>}\n\t\t\t\t\t<Header>Последние проверки</Header>\n\t\t\t\t\t<List className=\"RatingList\">\n\t\t\t\t\t\t<Cell>\n\t\t\t\t\t\t\t<Div>Время</Div>\n\t\t\t\t\t\t\t<Div>Результат</Div>\n\t\t\t\t\t\t\t<Div>Баллы</Div>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t{this.state.level.checks.map((check) => {\n              return (\n\t\t\t\t\t\t\t\t<Cell key={\"check_\" + check.check_id}>\n\t\t\t        \t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{check.sended}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{this.statusOfCheck(check)}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{check.value}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</List>\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n}}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\t//level: ownProps.level\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t/*onLevelUpdate: (level) =>\n\t\t\tnew Promise((resolve) =>\n\t\t\t\tupdateLevel(level).then((action) => {\n\t\t\t\t\tdispatch(action);\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t)*/\n\t};\n};\n\nexport default connect(mapStateToProps/*, mapDispatchToProps*/)(Level);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport { Panel, PanelHeader, PanelHeaderButton, List, Cell, Group, ScreenSpinner, Div, Avatar } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport Api from '../core/api/Api';\n\n// Redux\nimport { connect } from 'react-redux';\n//import { selectRegion } from '../redux/actions/region';\n\nimport './Rating.css';\n\nconst osName = platform();\n\nclass Rating extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n    this.state = {isLoading: true};\n  };\n\n\t// Компонент примонтирован\n\tcomponentDidMount() {\n\n\t\tconst this_ = this;\n\n\t\tasync function fetchData() {\n\t\t\tconst token = await bridge.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7405679, \"scope\": \"friends\"});\n\t\t\tconst fds = await bridge.send(\"VKWebAppCallAPIMethod\", {\n\t\t\t\t\"method\": \"friends.get\",\n\t\t\t\t\"params\": {\n\t\t\t\t\t\"fields\": \"photo_200_orig\",\n\t\t\t\t\t//\"count\": 10,\n\t\t\t\t\t\"access_token\": token.access_token,\n\t\t\t\t\t\"v\": \"5.103\"\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis_.setState({isLoading: false, friends: fds.response.items});\n\t\t}\n\n\t\tfetchData();\n\n\n\t\t/*Api.region.list(this.props.world, (regions) => {\n      this.setState({\n        isLoading: false,\n        friends: friends,\n      });\n    });*/\n  };\n\n\t// Выбор региона\n  select = (region) => {\n    //this.props.onSelectRegion(region).then(() => this.props.navigate('region-chart'));\n  };\n\n\trender() {\n\t\treturn (\n\t\t\t<Panel id={this.props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={() => {this.props.navigate('home')}}>\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tСтатистика по регионам\n\t\t\t\t</PanelHeader>\n\t\t\t\t{!this.state.isLoading && <Group>\n\t\t      <List className=\"RatingList\">\n\t\t\t\t\t\t<Cell expandable>\n\t\t\t\t\t\t\t<Div></Div><Div>Баллы</Div>\n\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t{this.state.friends.map((friend) => {\n              return (\n\t\t\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\t\t\tkey={\"friend_\" + friend.id}\n\t\t\t\t\t\t\t\t\tbefore={friend.photo_200_orig ? <Avatar src={friend.photo_200_orig}/> : null}\n\t\t\t\t\t\t\t\t\texpandable\n\t\t\t\t\t\t\t\t\tonClick={() => {/*this.select(region)*/}}\n\t\t\t\t\t\t\t\t>\n\t\t\t        \t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{`${friend.first_name} ${friend.last_name}`}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t\t\t{Math.round(Math.random()*100)}\n\t\t\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t\t</Cell>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</List>\n\t\t\t\t</Group>}\n\t\t\t\t{this.state.isLoading && <ScreenSpinner size='large' />}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n\t\t\t//friends: state.rating.friends\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      /*onSelectRegion: (region) =>\n        new Promise((resolve) =>\n          selectRegion(region).then((action) => {\n            dispatch(action);\n            resolve();\n          })\n        )*/\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rating);\n","import React from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport { ScreenSpinner, ModalRoot, ModalCard } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28HomeOutline from '@vkontakte/icons/dist/28/home_outline';\nimport Icon28Messages from '@vkontakte/icons/dist/28/messages';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport Api from './core/api/Api';\n\nimport Home from './panels/Home';\nimport Begin from './panels/Begin';\nimport Level from './panels/Level';\nimport Rating from './panels/Rating';\n\nconst MODAL_BEFORE_BEGIN = 'before-begin';\nconst MODAL_NOT_ALLOW_MESSAGES = 'not-allow-messages';\nconst MODAL_NOT_ALLOW_LOCATION = 'not-allow-location';\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n    super(props);\n\n    this.state = {\n\t\t\tactiveModal: null,\n\t\t\tactivePanel: 'home',\n\t\t\tuser: null,\n\t\t\tlevel: null\n\t\t};\n\n\t\tthis.navigate = (e, props) => {\n\t\t\tthis.setState({activePanel: e.currentTarget ? e.currentTarget.dataset.to : e});\n\t\t};\n\n\t\tthis.setUser = (user) => {\n\t\t\tthis.setState({user: user});\n\t\t};\n\n\t\tthis.setLevel = (level) => {\n\t\t\tthis.setState({level: level});\n\t\t};\n\n\t\tthis.modalClose = () => {\n\t\t\tthis.setState({activeModal: null});\n\t\t};\n\n\t\tthis.begin = () => {\n\n\t\t\tthis.modalClose();\n\n\t\t\tbridge.send(\"VKWebAppAllowMessagesFromGroup\", {group_id: 193696611})\n\t\t\t\t.then(data => {\n\t\t\t\t\tbridge.send(\"VKWebAppGetGeodata\", {})\n\t\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\t\tif(data.available) {\n\t\t\t\t\t\t\t\tApi.home.begin(Object.assign({}, this.state.user, {lat: data.lat, long: data.long}), (result) => {\n\t\t\t\t\t\t\t\t\tif(result) {\n\t\t\t\t\t\t\t\t\t\tthis.navigate('level');\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t// Не разрешил доступ к геоданным\n\t\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\t\tthis.setActiveModal(MODAL_NOT_ALLOW_LOCATION);\n\t\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t// Не разрешил отправлять сообщения\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.setActiveModal(MODAL_NOT_ALLOW_MESSAGES);\n\t\t\t\t});\n\t\t};\n  }\n\n\tcomponentDidMount() {\n\t\tconst this_ = this;\n\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tthis_.setUser(user);\n\n\t\t\tconst level = await Api.home.level(user.id);\n\t\t\tif(level) {\n\t\t\t\tthis_.setLevel(level);\n\t\t\t\tthis_.navigate('level');\n\t\t\t} else {\n\t\t\t\tthis_.navigate('begin');\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}\n\n\tsetActiveModal (activeModal) {\n\t\tthis.setState({activeModal: activeModal || null});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel} modal={\n\t\t\t\t<ModalRoot\n\t\t\t\t\tactiveModal={this.state.activeModal}\n\t\t\t\t\tonClose={this.modalBack}\n\t\t\t\t>\n\t\t\t\t\t<ModalCard\n\t\t\t\t\t\tid={MODAL_BEFORE_BEGIN}\n\t\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\t\ticon={<Icon28HomeOutline />}\n\t\t\t\t\t\theader=\"Вы подтверждаете что находитесь дома?\"\n\t\t\t\t\t\tcaption={<p>Баллы будут начисляться только за нахождение там, где вы находитесь сейчас.<br />Не забудьте разрешить данные о местоположении.</p>}\n\t\t\t\t\t\tactions={[{\n\t\t\t\t\t\t\ttitle: 'Да, подтверждаю',\n\t\t\t\t\t\t\tmode: 'primary',\n\t\t\t\t\t\t\taction: this.begin\n\t\t\t\t\t\t}]}\n\t\t\t\t\t>\n\t\t\t\t\t</ModalCard>\n\t\t\t\t\t<ModalCard\n\t\t\t\t\t\tid={MODAL_NOT_ALLOW_LOCATION}\n\t\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\t\ticon={<Icon28CompassOutline />}\n\t\t\t\t\t\theader=\"Вам нужно разрешить доступ к геопозиции\"\n\t\t\t\t\t\tcaption=\"Без данного разрешения приложение не сможет начислять вам баллы\"\n\t\t\t\t\t\tactions={[{\n\t\t\t\t\t\t\ttitle: 'Повторить',\n\t\t\t\t\t\t\tmode: 'primary',\n\t\t\t\t\t\t\taction: this.begin\n\t\t\t\t\t\t}]}\n\t\t\t\t\t>\n\t\t\t\t\t</ModalCard>\n\t\t\t\t\t<ModalCard\n\t\t\t\t\t\tid={MODAL_NOT_ALLOW_MESSAGES}\n\t\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\t\ticon={<Icon28Messages />}\n\t\t\t\t\t\theader=\"Вам нужно разрешить отправку сообщений\"\n\t\t\t\t\t\tcaption=\"Без данного разрешения приложение не сможет отправлять вам уведомления.\"\n\t\t\t\t\t\tactions={[{\n\t\t\t\t\t\t\ttitle: 'Повторить',\n\t\t\t\t\t\t\tmode: 'primary',\n\t\t\t\t\t\t\taction: this.begin\n\t\t\t\t\t\t}]}\n\t\t\t\t\t>\n\t\t\t\t\t</ModalCard>\n\t\t\t\t</ModalRoot>}\n\t\t\t>\n\t\t\t\t<Home id='home' fetchedUser={this.state.user} navigate={this.navigate} />\n\t\t\t\t<Begin id='begin' fetchedUser={this.state.user} navigate={this.navigate} start={() => {this.setActiveModal(MODAL_BEFORE_BEGIN)}} />\n\t\t\t\t<Level id='level' fetchedUser={this.state.user} navigate={this.navigate} level={this.state.level} />\n\t\t\t\t<Rating id='rating' navigate={this.navigate} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","/**\n * Комбинаяия редукторов\n */\nimport { combineReducers } from 'redux';\nimport level from './level';\n\nconst appReducer = combineReducers({\n    level\n});\n\nconst rootReducer = (state, action) => {\n  // При разлогиневании пользователя стираем все состояние\n  /*if (action.type === 'LOGOUT') {\n    state = undefined\n  }*/\n\n  return appReducer(state, action)\n}\n\nexport default rootReducer;\n","/**\n * Редуктор балов\n */\n\nexport default function reducer(state = null, action) {\n  switch (action.type) {\n    // Обновление уровня\n    case 'LEVEL_UPDATE':\n      return Object.assign({}, state, {level: action.level});\n\n    default:\n      return state;\n    }\n}\n","/**\n * Определение хранилища состояния приложения\n * Работает через Redux Persist (хранит состояние в AsyncStorage)\n */\nimport { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\n// defaults to localStorage for web and AsyncStorage for react-native\nimport storage from 'redux-persist/lib/storage';\n\nimport rootReducer from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = createStore(persistedReducer);\n\nexport const persistor = persistStore(store);\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Всё для управления и хранения состояния приложения (Redux)\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/index';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>, document.getElementById(\"root\")\n);\n\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(eruda => {}); //runtime download\n}\n"],"sourceRoot":""}